{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImagemApartamento from \"./lista-apartamento-imagem/ImagemApartamento\";\nimport { buscarApartamentos, atualizarOcorrenciaApartamento } from \"../../services/apartamento.service\";\nimport Footer from \"../Footer\";\nimport Loading from \"../../utils/util\";\nexport default function ListaApartamentos() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ativaLoad = _useState4[0],\n      setAtivaLoad = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  useEffect(function () {\n    buscarApartamentos().then(function (retorno) {\n      retorno.dados.then(function (data) {\n        setLista(data);\n      });\n    }).catch(function (error) {});\n  }, []);\n\n  function atualizaOcorrencia(id_apartamento) {\n    atualizarOcorrenciaApartamento(id_apartamento);\n  }\n\n  function exibeModal() {\n    React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: true,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.centeredView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.modalText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Hello World!\"), React.createElement(Pressable, {\n      style: [styles.button, styles.buttonClose],\n      onPress: function onPress() {\n        return setModalVisible(!modalVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Hide Modal\")))));\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function exibeImagem(apartamento) {\n    if (!apartamento.alarme) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return atualizaOcorrencia(apartamento.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function ExibeDados() {\n    var _this = this;\n\n    return React.createElement(View, {\n      style: styles.containerLista,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, React.createElement(FlatList, {\n      data: lista,\n      keyExtractor: function keyExtractor(item) {\n        return item.nome;\n      },\n      contentContainerStyle: styles.container,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }, exibeImagem(item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: true,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Hide Modal\"))))));\n}\nvar styles = StyleSheet.create({\n  containerLista: {\n    flex: 1,\n    marginTop: 20\n  },\n  container: {\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js"],"names":["React","useState","useEffect","ImagemApartamento","buscarApartamentos","atualizarOcorrenciaApartamento","Footer","Loading","ListaApartamentos","lista","setLista","ativaLoad","setAtivaLoad","modalVisible","setModalVisible","then","retorno","dados","data","catch","error","atualizaOcorrencia","id_apartamento","exibeModal","Alert","alert","styles","centeredView","modalView","modalText","button","buttonClose","textStyle","ExibeLoad","exibeImagem","apartamento","alarme","id","ExibeDados","containerLista","item","nome","container","Exibir","flag","flex","StyleSheet","create","marginTop","justifyContent","flexDirection","flexWrap","alignItems","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","buttonOpen","color","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, StyleSheet, Text, TouchableOpacity, View, Modal,Pressable,Alert } from 'react-native';\n\nimport ImagemApartamento from './lista-apartamento-imagem/ImagemApartamento';\nimport { buscarApartamentos, atualizarOcorrenciaApartamento } from '../../services/apartamento.service';\n\nimport Footer from '../Footer';\nimport Loading from '../../utils/util';\n\n\nexport default function ListaApartamentos() {\n    const [lista, setLista] = useState([]);\n    const [ativaLoad, setAtivaLoad] = useState(false);\n    const [modalVisible, setModalVisible] = useState(false);\n\n    useEffect(() => {\n        buscarApartamentos().then((retorno) => {\n            retorno.dados.then((data) => {\n                setLista(data);\n            })\n        }).catch((error) => {\n            //exibir mensagem na tela dizendo que senha está errado\n        })\n    }, [])\n\n    function atualizaOcorrencia(id_apartamento) {\n        atualizarOcorrenciaApartamento(id_apartamento)\n        // buscarApartamentos().then((retorno) => {\n        //     retorno.dados.then((data) => {\n        //         setLista(data);\n        //     })\n        // }).catch((error) => {\n        //     //exibir mensagem na tela dizendo que senha está errado\n        // })\n\n    }\n\n    function exibeModal() {\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={true}\n            onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n            }}\n        >\n            <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n                <Text style={styles.modalText}>Hello World!</Text>\n                <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => setModalVisible(!modalVisible)}\n                >\n                <Text style={styles.textStyle}>Hide Modal</Text>\n                </Pressable>\n            </View>\n            </View>\n        </Modal>\n        \n    }\n\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    function exibeImagem(apartamento) {\n        if (!apartamento.alarme) {\n            return (\n                <TouchableOpacity onPress={() => atualizaOcorrencia(apartamento.id)}>\n                    <View>\n                        <ImagemApartamento apartamento={apartamento} />\n                    </View>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View>\n                    <ImagemApartamento apartamento={apartamento} />\n                </View>\n            )\n        }\n    }\n\n    function ExibeDados() {\n        return (\n            <View style={styles.containerLista}>\n                <FlatList\n                    data={lista}\n                    keyExtractor={item => item.nome}\n                    contentContainerStyle={styles.container}\n                    renderItem={({ item }) => (\n                    <View>\n                        {exibeImagem(item)}\n                    </View>\n                    )} />\n            </View>\n        );\n    }\n\n\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View style={{ flex: 1 }}>\n            {/*Exibir(ativaLoad)*/}\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={true}\n                onRequestClose={() => {\n                Alert.alert(\"Modal has been closed.\");\n                setModalVisible(!modalVisible);\n                }}\n        >\n            <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n                <Text style={styles.modalText}>Hello World!</Text>\n                <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => setModalVisible(!modalVisible)}\n                >\n                <Text style={styles.textStyle}>Hide Modal</Text>\n                </Pressable>\n            </View>\n            </View>\n        </Modal>\n\n        </View>\n    );\n\n\n}\nconst styles = StyleSheet.create({\n    containerLista: {\n        flex: 1,\n        marginTop: 20\n    },\n    container: {\n        justifyContent: 'space-around',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n      },\n      modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      buttonOpen: {\n        backgroundColor: \"#F194FF\",\n      },\n      buttonClose: {\n        backgroundColor: \"#2196F3\",\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n});"]},"metadata":{},"sourceType":"module"}