{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var logar = function logar(user, password) {\n  var response, dados;\n  return _regeneratorRuntime.async(function logar$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          alert(user);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://viacep.com.br/ws/\" + user + \"/json\"));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          dados = _context.sent;\n          return _context.abrupt(\"return\", dados);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fetchWeather = function fetchWeather(woeid) {\n  var _await$fetch, logradouro, localidade, _await$response$json, title, consolidated_weather, _consolidated_weather, weather_state_name, the_temp, min_temp, max_temp;\n\n  return _regeneratorRuntime.async(function fetchWeather$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.metaweather.com/api/location/\" + woeid + \"/\"));\n\n        case 2:\n          _await$fetch = _context2.sent;\n          logradouro = _await$fetch.logradouro;\n          localidade = _await$fetch.localidade;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          _await$response$json = _context2.sent;\n          title = _await$response$json.title;\n          consolidated_weather = _await$response$json.consolidated_weather;\n          _consolidated_weather = consolidated_weather[0], weather_state_name = _consolidated_weather.weather_state_name, the_temp = _consolidated_weather.the_temp, min_temp = _consolidated_weather.min_temp, max_temp = _consolidated_weather.max_temp;\n          return _context2.abrupt(\"return\", {\n            location: title,\n            weather: weather_state_name,\n            temperature: the_temp,\n            min_temp: min_temp,\n            max_temp: max_temp\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/STUDY/FIAP/FIAP-2ANO/CHALLENGER/Sprint3/Sprint3_Mobile/services/login.service.js"],"names":["logar","user","password","alert","fetch","response","json","dados","fetchWeather","woeid","logradouro","localidade","title","consolidated_weather","weather_state_name","the_temp","min_temp","max_temp","location","weather","temperature"],"mappings":";AAAA,OAAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAOC,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,KAAK,CAACF,IAAD,CAAL;AADiB;AAAA,2CAEMG,KAAK,8BACGH,IADH,WAFX;;AAAA;AAEXI,UAAAA,QAFW;AAAA;AAAA,2CAKGA,QAAQ,CAACC,IAAT,EALH;;AAAA;AAKXC,UAAAA,KALW;AAAA,2CAMVA,KANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AASP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiBL,KAAK,+CACEK,KADF,OADtB;;AAAA;AAAA;AAChBC,UAAAA,UADgB,gBAChBA,UADgB;AACJC,UAAAA,UADI,gBACJA,UADI;AAAA;AAAA,2CAIsBN,QAAQ,CAACC,IAAT,EAJtB;;AAAA;AAAA;AAIhBM,UAAAA,KAJgB,wBAIhBA,KAJgB;AAITC,UAAAA,oBAJS,wBAITA,oBAJS;AAAA,kCAKqCA,oBAAoB,CAAC,CAAD,CALzD,EAKhBC,kBALgB,yBAKhBA,kBALgB,EAKIC,QALJ,yBAKIA,QALJ,EAKcC,QALd,yBAKcA,QALd,EAKwBC,QALxB,yBAKwBA,QALxB;AAAA,4CAMjB;AACHC,YAAAA,QAAQ,EAAEN,KADP;AAEHO,YAAAA,OAAO,EAAEL,kBAFN;AAGHM,YAAAA,WAAW,EAAEL,QAHV;AAIHC,YAAAA,QAAQ,EAAEA,QAJP;AAKHC,YAAAA,QAAQ,EAAEA;AALP,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["export const logar = async (user, password) => {\n    alert(user)\n    const response = await fetch(\n        `http://viacep.com.br/ws/${user}/json`,\n    );\n    const dados = await response.json();    \n    return dados;\n};\n\nexport const fetchWeather = async woeid => {\n    const { logradouro, localidade } = await fetch(\n        `https://www.metaweather.com/api/location/${woeid}/`,\n    );\n    const { title, consolidated_weather } = await response.json();\n    const { weather_state_name, the_temp, min_temp, max_temp } = consolidated_weather[0];\n    return {\n        location: title,\n        weather: weather_state_name,\n        temperature: the_temp,\n        min_temp: min_temp,\n        max_temp: max_temp\n    };\n};"]},"metadata":{},"sourceType":"module"}