{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport function logar(user, password) {\n  return fetch(\"http://viacep.com.br/ws/\" + user + \"/json\").then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport function getMoviesFromApiAsync(user, password) {\n  return fetch(\"http://viacep.com.br/ws/\" + user + \"/json\").then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\nexport var fetchWeather = function fetchWeather(woeid) {\n  var _await$fetch, logradouro, localidade, _await$response$json, title, consolidated_weather, _consolidated_weather, weather_state_name, the_temp, min_temp, max_temp;\n\n  return _regeneratorRuntime.async(function fetchWeather$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://www.metaweather.com/api/location/\" + woeid + \"/\"));\n\n        case 2:\n          _await$fetch = _context.sent;\n          logradouro = _await$fetch.logradouro;\n          localidade = _await$fetch.localidade;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          _await$response$json = _context.sent;\n          title = _await$response$json.title;\n          consolidated_weather = _await$response$json.consolidated_weather;\n          _consolidated_weather = consolidated_weather[0], weather_state_name = _consolidated_weather.weather_state_name, the_temp = _consolidated_weather.the_temp, min_temp = _consolidated_weather.min_temp, max_temp = _consolidated_weather.max_temp;\n          return _context.abrupt(\"return\", {\n            location: title,\n            weather: weather_state_name,\n            temperature: the_temp,\n            min_temp: min_temp,\n            max_temp: max_temp\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/STUDY/FIAP/FIAP-2ANO/CHALLENGER/Sprint3/Sprint3_Mobile/services/login.service.js"],"names":["logar","user","password","fetch","then","response","json","responseJson","catch","error","console","getMoviesFromApiAsync","fetchWeather","woeid","logradouro","localidade","title","consolidated_weather","weather_state_name","the_temp","min_temp","max_temp","location","weather","temperature"],"mappings":";AAAA,OAAO,SAASA,KAAT,CAAeC,IAAf,EAAqBC,QAArB,EAA+B;AAClC,SAAOC,KAAK,8BAA4BF,IAA5B,WAAL,CACJG,IADI,CACC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADD,EAEJF,IAFI,CAEC,UAACG,YAAD,EAAkB;AACtB,WAAOA,YAAP;AACD,GAJI,EAKJC,KALI,CAKE,UAACC,KAAD,EAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAPI,CAAP;AAQD;AAEH,OAAO,SAASE,qBAAT,CAA+BV,IAA/B,EAAqCC,QAArC,EAA+C;AAClD,SAAOC,KAAK,8BAA4BF,IAA5B,WAAL,CACJG,IADI,CACC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADD,EAEJF,IAFI,CAEC,UAACG,YAAD,EAAkB;AACtB,WAAOA,YAAP;AACD,GAJI,EAKJC,KALI,CAKE,UAACC,KAAD,EAAW;AAChBC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAPI,CAAP;AAQD;AAEH,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACiBV,KAAK,+CACEU,KADF,OADtB;;AAAA;AAAA;AAChBC,UAAAA,UADgB,gBAChBA,UADgB;AACJC,UAAAA,UADI,gBACJA,UADI;AAAA;AAAA,2CAIsBV,QAAQ,CAACC,IAAT,EAJtB;;AAAA;AAAA;AAIhBU,UAAAA,KAJgB,wBAIhBA,KAJgB;AAITC,UAAAA,oBAJS,wBAITA,oBAJS;AAAA,kCAKqCA,oBAAoB,CAAC,CAAD,CALzD,EAKhBC,kBALgB,yBAKhBA,kBALgB,EAKIC,QALJ,yBAKIA,QALJ,EAKcC,QALd,yBAKcA,QALd,EAKwBC,QALxB,yBAKwBA,QALxB;AAAA,2CAMjB;AACHC,YAAAA,QAAQ,EAAEN,KADP;AAEHO,YAAAA,OAAO,EAAEL,kBAFN;AAGHM,YAAAA,WAAW,EAAEL,QAHV;AAIHC,YAAAA,QAAQ,EAAEA,QAJP;AAKHC,YAAAA,QAAQ,EAAEA;AALP,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["export function logar(user, password) {\n    return fetch(`http://viacep.com.br/ws/${user}/json`)\n      .then((response) => response.json())\n      .then((responseJson) => {        \n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\nexport function getMoviesFromApiAsync(user, password) {\n    return fetch(`http://viacep.com.br/ws/${user}/json`)\n      .then((response) => response.json())\n      .then((responseJson) => {        \n        return responseJson;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\nexport const fetchWeather = async woeid => {\n    const { logradouro, localidade } = await fetch(\n        `https://www.metaweather.com/api/location/${woeid}/`,\n    );\n    const { title, consolidated_weather } = await response.json();\n    const { weather_state_name, the_temp, min_temp, max_temp } = consolidated_weather[0];\n    return {\n        location: title,\n        weather: weather_state_name,\n        temperature: the_temp,\n        min_temp: min_temp,\n        max_temp: max_temp\n    };\n};"]},"metadata":{},"sourceType":"module"}