{"ast":null,"code":"export function getConnectionAPI(url) {\n  return fetch(url).then(function (response) {\n    response.json();\n    console.log(\"status: \" + JSON.stringify(response));\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function postConnectionAPI(url, body) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function patchConnectionAPI(url, body) {\n  return fetch(url, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function deleteConnectionAPI(url, body) {\n  if (body) {\n    return fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      return responseJson;\n    }).catch(function (error) {\n      console.error(\"Erro: \" + error);\n    });\n  } else {\n    return fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      return responseJson;\n    }).catch(function (error) {\n      console.error(\"Erro: \" + error);\n    });\n  }\n}","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/utils/ConnectionAPI.js"],"names":["getConnectionAPI","url","fetch","then","response","json","console","log","JSON","stringify","responseJson","catch","error","postConnectionAPI","body","method","headers","Accept","patchConnectionAPI","deleteConnectionAPI"],"mappings":"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","sourcesContent":["export function getConnectionAPI(url) {\n    return fetch(url)\n        .then((response) => {\n            \n            response.json()\n            console.log(\"status: \" + JSON.stringify(response))\n\n        })\n        .then((responseJson) => {\n            \n            return responseJson;\n        })\n        .catch((error) => {\n            console.error(\"Erro: \" + error);\n        });\n}\n\nexport function postConnectionAPI(url, body) {\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n        return responseJson;\n    })\n    .catch((error) => {\n        console.error(\"Erro: \" + error);\n    });\n}\n\nexport function patchConnectionAPI(url, body) {\n    return fetch(url, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            return responseJson;\n        })\n        .catch((error) => {\n            console.error(\"Erro: \" + error);\n        });\n}\n\nexport function deleteConnectionAPI(url, body) {\n    if (body) {\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                console.error(\"Erro: \" + error);\n            });\n    } else {\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                console.error(\"Erro: \" + error);\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}