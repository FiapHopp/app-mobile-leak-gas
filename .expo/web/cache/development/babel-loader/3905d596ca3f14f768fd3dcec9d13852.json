{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/login/Login.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { logar } from \"../../services/login.service\";\nimport getImage from \"../../utils/Images\";\nimport Loading from \"../../utils/util\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ativaLoad = _useState6[0],\n      setAtivaLoad = _useState6[1];\n\n  var _useState7 = useState('2'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ativaErro = _useState8[0],\n      setAtivaErro = _useState8[1];\n\n  var _useAsyncStorage = useAsyncStorage('idUsuario'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  function realizarLogin() {\n    var usuario = {\n      \"usuario\": user,\n      \"senha\": password\n    };\n\n    if (!camposValidos(usuario)) {\n      setAtivaErro('0');\n      return false;\n    } else {\n      setAtivaLoad(true);\n      logar(usuario).then(function (retorno) {\n        setAtivaLoad(false);\n\n        if (retorno.sts == 200) {\n          retorno.dados.then(function (dados) {\n            setAtivaErro('2');\n            setItem(dados.data.idUsuario);\n            navigation.navigate(\"ListaCondominios\", {\n              idUsuario: dados.data.idUsuario\n            });\n          });\n        } else if (retorno.sts === 400) {\n          retorno.dados.then(function (dados) {\n            if (dados.errors[0] == 'Usu√°rio ou senha incorretos') {\n              setAtivaErro('1');\n            } else {\n              console.log(\"Erro ao realizar login\");\n              navigation.navigate(\"Erro\");\n            }\n          });\n        } else {\n          setAtivaLoad(false);\n          setAtivaErro('2');\n          console.log(\"Erro ao realizar login\");\n        }\n      }).catch(function (error) {\n        setAtivaLoad(false);\n        setAtivaErro('2');\n        console.log(\"Erro ao realizar login | Erro: \" + error);\n        navigation.navigate(\"Erro\");\n      });\n    }\n  }\n\n  function camposValidos(usuario) {\n    return usuario.usuario == '' || usuario.senha == '' ? false : true;\n  }\n\n  function ExibirMensagemErro(flag) {\n    if (flag == '0') {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Por favor, preencha todos os campos!\"));\n    } else if (flag == '1') {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \"Usu\\xE1rio ou senha incorretos\"));\n    }\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    return React.createElement(ImageBackground, {\n      source: getImage('background'),\n      imageStyle: styles.imageBackground,\n      style: styles.imageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImage('logo-transparente'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setUser,\n      placeholder: \"usu\\xE1rio\",\n      value: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"password\",\n      onChangeText: setPassword,\n      placeholder: \"senha\",\n      secureTextEntry: true,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), ExibirMensagemErro(ativaErro), React.createElement(View, {\n      style: styles.conteinerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      style: styles.button,\n      color: \"#2F2E2E\",\n      title: \"Entrar na minha conta\",\n      accessibilityLabel: \"Bot\\xE3o que realiza o login\",\n      onPress: realizarLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  function Exibir(flag) {\n    if (flag) {\n      return ExibeLoad();\n    } else {\n      return ExibeDados();\n    }\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  image: {\n    width: 200,\n    height: 200,\n    resizeMode: 'stretch'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    opacity: 0.7,\n    alignItems: 'center',\n    padding: 16\n  },\n  imageContainer: {\n    flex: 1\n  },\n  inputStyle: {\n    backgroundColor: 'white',\n    borderColor: 'gray',\n    borderRadius: 1,\n    borderWidth: 2,\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 5,\n    width: 300\n  },\n  imageBackground: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'cover'\n  },\n  conteinerButton: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/login/Login.js"],"names":["React","useState","useAsyncStorage","logar","getImage","Loading","Login","navigation","user","setUser","password","setPassword","ativaLoad","setAtivaLoad","ativaErro","setAtivaErro","getItem","setItem","realizarLogin","usuario","camposValidos","then","retorno","sts","dados","data","idUsuario","navigate","errors","console","log","catch","error","senha","ExibirMensagemErro","flag","fontSize","color","ExibeLoad","ExibeDados","styles","imageBackground","imageContainer","container","image","inputStyle","conteinerButton","button","Exibir","flex","StyleSheet","create","width","height","resizeMode","backgroundColor","opacity","alignItems","padding","borderColor","borderRadius","borderWidth","marginBottom","paddingHorizontal","marginTop"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,SAASC,eAAT,QAAgC,2CAAhC;AAEA,SAASC,KAAT;AACA,OAAOC,QAAP;AAEA,OAAOC,OAAP;AAEA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAE1C,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCV,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkCZ,QAAQ,CAAC,GAAD,CAA1C;AAAA;AAAA,MAAOa,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAA6Bb,eAAe,CAAC,WAAD,CAA5C;AAAA,MAAQc,OAAR,oBAAQA,OAAR;AAAA,MAAiBC,OAAjB,oBAAiBA,OAAjB;;AAEA,WAASC,aAAT,GAAyB;AACrB,QAAIC,OAAO,GAAG;AACV,iBAAWX,IADD;AAEV,eAASE;AAFC,KAAd;;AAKA,QAAG,CAACU,aAAa,CAACD,OAAD,CAAjB,EAA2B;AACvBJ,MAAAA,YAAY,CAAC,GAAD,CAAZ;AACA,aAAO,KAAP;AACH,KAHD,MAGK;AACDF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAV,MAAAA,KAAK,CAACgB,OAAD,CAAL,CAAeE,IAAf,CAAoB,UAACC,OAAD,EAAa;AAC7BT,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,YAAGS,OAAO,CAACC,GAAR,IAAe,GAAlB,EAAsB;AAClBD,UAAAA,OAAO,CAACE,KAAR,CAAcH,IAAd,CAAmB,UAACG,KAAD,EAAW;AAC1BT,YAAAA,YAAY,CAAC,GAAD,CAAZ;AACAE,YAAAA,OAAO,CAACO,KAAK,CAACC,IAAN,CAAWC,SAAZ,CAAP;AACAnB,YAAAA,UAAU,CAACoB,QAAX,CAAoB,kBAApB,EAAwC;AAAED,cAAAA,SAAS,EAAEF,KAAK,CAACC,IAAN,CAAWC;AAAxB,aAAxC;AACH,WAJD;AAKH,SAND,MAMM,IAAGJ,OAAO,CAACC,GAAR,KAAgB,GAAnB,EAAuB;AACzBD,UAAAA,OAAO,CAACE,KAAR,CAAcH,IAAd,CAAmB,UAACG,KAAD,EAAW;AAC1B,gBAAGA,KAAK,CAACI,MAAN,CAAa,CAAb,KAAmB,6BAAtB,EAAoD;AAChDb,cAAAA,YAAY,CAAC,GAAD,CAAZ;AACH,aAFD,MAEK;AACDc,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAvB,cAAAA,UAAU,CAACoB,QAAX,CAAoB,MAApB;AACH;AACJ,WAPD;AAQH,SATK,MASD;AACDd,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,YAAY,CAAC,GAAD,CAAZ;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEH;AACJ,OAvBD,EAuBGC,KAvBH,CAuBS,UAACC,KAAD,EAAW;AAChBnB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,YAAY,CAAC,GAAD,CAAZ;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCE,KAAhD;AACAzB,QAAAA,UAAU,CAACoB,QAAX,CAAoB,MAApB;AACH,OA5BD;AA8BH;AAEJ;;AAED,WAASP,aAAT,CAAuBD,OAAvB,EAA+B;AAC3B,WAAOA,OAAO,CAACA,OAAR,IAAmB,EAAnB,IAAyBA,OAAO,CAACc,KAAR,IAAiB,EAA1C,GAA+C,KAA/C,GAAuD,IAA9D;AACH;;AAED,WAASC,kBAAT,CAA4BC,IAA5B,EAAiC;AAC7B,QAAGA,IAAI,IAAI,GAAX,EAAe;AACX,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADJ;AAKH,KAND,MAMM,IAAGF,IAAI,IAAI,GAAX,EAAe;AACjB,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CADJ;AAKH;AACJ;;AAED,WAASC,SAAT,GAAoB;AAChB,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,WAASC,UAAT,GAAqB;AACjB,WACI,oBAAC,eAAD;AACA,MAAA,MAAM,EAAEnC,QAAQ,CAAC,YAAD,CADhB;AAEA,MAAA,UAAU,EAAEoC,MAAM,CAACC,eAFnB;AAGA,MAAA,KAAK,EAAED,MAAM,CAACE,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEH,MAAM,CAACI,KADlB;AAEI,MAAA,MAAM,EAAExC,QAAQ,CAAC,mBAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEoC,MAAM,CAACK,UAAzB;AACI,MAAA,YAAY,EAAC,MADjB;AAEI,MAAA,YAAY,EAAEpC,OAFlB;AAGI,MAAA,WAAW,EAAC,YAHhB;AAII,MAAA,KAAK,EAAED,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEgC,MAAM,CAACK,UAAzB;AACI,MAAA,YAAY,EAAC,UADjB;AAEI,MAAA,YAAY,EAAElC,WAFlB;AAGI,MAAA,WAAW,EAAC,OAHhB;AAII,MAAA,eAAe,EAAE,IAJrB;AAKI,MAAA,KAAK,EAAED,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAgBKwB,kBAAkB,CAACpB,SAAD,CAhBvB,EAkBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE0B,MAAM,CAACM,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEN,MAAM,CAACO,MAAtB;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,KAAK,EAAC,uBAFV;AAGI,MAAA,kBAAkB,EAAC,8BAHvB;AAII,MAAA,OAAO,EAAE7B,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAlBJ,CAJA,CADJ;AAiCH;;AAED,WAAS8B,MAAT,CAAgBb,IAAhB,EAAqB;AACjB,QAAGA,IAAH,EAAQ;AACJ,aAAOG,SAAS,EAAhB;AACH,KAFD,MAEK;AACD,aAAOC,UAAU,EAAjB;AACH;AACJ;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACU,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,MAAM,CAACpC,SAAD,CADX,CADJ;AAMH;AACD,IAAM4B,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHC,IAAAA,UAAU,EAAE;AAHT,GADsB;AAM7BX,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPM,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,OAAO,EAAE,GAHF;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,OAAO,EAAE;AALF,GANkB;AAa7BhB,EAAAA,cAAc,EAAE;AACZO,IAAAA,IAAI,EAAE;AADM,GAba;AAgB7BJ,EAAAA,UAAU,EAAE;AACRU,IAAAA,eAAe,EAAE,OADT;AAERI,IAAAA,WAAW,EAAE,MAFL;AAGRC,IAAAA,YAAY,EAAE,CAHN;AAIRC,IAAAA,WAAW,EAAE,CAJL;AAKRR,IAAAA,MAAM,EAAE,EALA;AAMRS,IAAAA,YAAY,EAAE,EANN;AAORC,IAAAA,iBAAiB,EAAE,CAPX;AAQRX,IAAAA,KAAK,EAAE;AARC,GAhBiB;AA0B7BX,EAAAA,eAAe,EAAE;AACbQ,IAAAA,IAAI,EAAE,CADO;AAEbG,IAAAA,KAAK,EAAE,IAFM;AAGbC,IAAAA,MAAM,EAAE,IAHK;AAIbC,IAAAA,UAAU,EAAE;AAJC,GA1BY;AAgC7BR,EAAAA,eAAe,EAAE;AACbG,IAAAA,IAAI,EAAE,CADO;AAEbQ,IAAAA,UAAU,EAAE,QAFC;AAGbO,IAAAA,SAAS,EAAE;AAHE;AAhCY,CAAlB,CAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button, Image, ImageBackground, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\n\nimport { logar } from '../../services/login.service';\nimport getImage from '../../utils/Images';\n\nimport Loading from '../../utils/util';\n\nexport default function Login({ navigation }) {\n\n    const [user, setUser] = useState('');\n    const [password, setPassword] = useState('');    \n    const [ativaLoad, setAtivaLoad] = useState(false);\n    const [ativaErro, setAtivaErro] = useState('2'); //0-falta preenchimento, 1-usuario ou senha incorretos, 2-nao exibe\n    const { getItem, setItem } = useAsyncStorage('idUsuario');\n\n    function realizarLogin() {            \n        var usuario = {\n            \"usuario\": user,\n            \"senha\": password\n        };\n        \n        if(!camposValidos(usuario)){            \n            setAtivaErro('0');\n            return false;\n        }else{\n            setAtivaLoad(true);\n            logar(usuario).then((retorno) => {                    \n                setAtivaLoad(false);\n                if(retorno.sts == 200){                    \n                    retorno.dados.then((dados) => {                        \n                        setAtivaErro('2');\n                        setItem(dados.data.idUsuario);\n                        navigation.navigate(\"ListaCondominios\", { idUsuario: dados.data.idUsuario });\n                    }) \n                }else if(retorno.sts === 400){                    \n                    retorno.dados.then((dados) => {\n                        if(dados.errors[0] == 'Usu√°rio ou senha incorretos'){\n                            setAtivaErro('1');\n                        }else{\n                            console.log(\"Erro ao realizar login\");\n                            navigation.navigate(\"Erro\");\n                        }\n                    }) \n                }else{\n                    setAtivaLoad(false);\n                    setAtivaErro('2');                    \n                    console.log(\"Erro ao realizar login\");\n\n                }\n            }).catch((error) => {\n                setAtivaLoad(false);\n                setAtivaErro('2');\n                console.log(\"Erro ao realizar login | Erro: \" + error);\n                navigation.navigate(\"Erro\"); \n            })\n\n        }\n        \n    }\n\n    function camposValidos(usuario){\n        return usuario.usuario == '' || usuario.senha == '' ? false : true;        \n    }\n\n    function ExibirMensagemErro(flag){\n        if(flag == '0'){\n            return (\n                <View>\n                    <Text style={{fontSize: 20, color: 'white'}}>Por favor, preencha todos os campos!</Text>\n                </View>\n            )\n        }else if(flag == '1'){\n            return (\n                <View>\n                    <Text style={{fontSize: 20, color: 'white'}}>Usu√°rio ou senha incorretos</Text>\n                </View>\n            )\n        }\n    }\n\n    function ExibeLoad(){\n        return(\n            <Loading/>\n        );\n    }\n    \n    function ExibeDados(){\n        return(\n            <ImageBackground\n            source={getImage('background')}\n            imageStyle={styles.imageBackground}\n            style={styles.imageContainer}>\n            <View style={styles.container}>\n                <Image\n                    style={styles.image}\n                    source={getImage('logo-transparente')} />\n                <TextInput style={styles.inputStyle}\n                    keyboardType=\"text\"\n                    onChangeText={setUser}\n                    placeholder=\"usu√°rio\"\n                    value={user} />\n                <TextInput style={styles.inputStyle}\n                    keyboardType=\"password\"\n                    onChangeText={setPassword}\n                    placeholder=\"senha\"\n                    secureTextEntry={true}\n                    value={password} />\n\n                {ExibirMensagemErro(ativaErro)}\n    \n                <View style={styles.conteinerButton}>\n                    <Button style={styles.button}\n                        color=\"#2F2E2E\"\n                        title=\"Entrar na minha conta\"\n                        accessibilityLabel=\"Bot√£o que realiza o login\"\n                        onPress={realizarLogin} />\n                </View>\n            </View>\n        </ImageBackground>\n        );\n    }\n\n    function Exibir(flag){\n        if(flag){\n            return ExibeLoad();\n        }else{\n            return ExibeDados();\n        }        \n    }\n    \n    return(\n        <View style={{flex: 1}}>\n            {Exibir(ativaLoad)}\n        </View>        \n    );  \n   \n}\nconst styles = StyleSheet.create({\n    image: {\n        width: 200,\n        height: 200,\n        resizeMode: 'stretch'\n    },\n    container: {\n        flex: 1,\n        backgroundColor: 'black',\n        opacity: 0.7,\n        alignItems: 'center',\n        padding: 16\n    },\n    imageContainer: {\n        flex: 1\n    },\n    inputStyle: {\n        backgroundColor: 'white',\n        borderColor: 'gray',\n        borderRadius: 1,\n        borderWidth: 2,\n        height: 40,\n        marginBottom: 10,\n        paddingHorizontal: 5,\n        width: 300\n    },\n    imageBackground: {\n        flex: 1,\n        width: null,\n        height: null,\n        resizeMode: 'cover'\n    },\n    conteinerButton: {\n        flex: 1,\n        alignItems: 'center',\n        marginTop: 30\n    },\n});"]},"metadata":{},"sourceType":"module"}