{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/usuarios/cadastro-usuario/CadastroUsuario.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { cadastrarUsuario, cadastrarUsuarioTeste } from \"../../../services/usuario.service\";\nimport Loading from \"../../../utils/util\";\nexport default function CadastroUsuario(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cpf = _useState4[0],\n      setCpf = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      celular = _useState6[0],\n      setCelular = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ativaLoad = _useState12[0],\n      setAtivaLoad = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ativaErro = _useState14[0],\n      setAtivaErro = _useState14[1];\n\n  var idCondominio = \"1\";\n  var idUsuario = \"1\";\n\n  var _useAsyncStorage = useAsyncStorage('idUsuario'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  function realizarCadastro() {\n    var usuario = {\n      \"nome\": nome,\n      \"cpf\": cpf,\n      \"telefone\": celular,\n      \"login\": user,\n      \"senha\": password,\n      \"nivelAcesso\": 0\n    };\n\n    if (!camposValidos(usuario)) {\n      setAtivaErro(true);\n      return false;\n    } else {\n      setAtivaErro(false);\n      setAtivaLoad(true);\n      cadastrarUsuarioTeste(usuario).then(function (retorno) {\n        if (retorno.sts == 201) {\n          setAtivaLoad(false);\n          navigation.navigate(\"ListaUsuarios\", {\n            idCondominio: idCondominio,\n            idUsuario: idUsuario\n          });\n        } else {\n          setAtivaLoad(false);\n          console.log(\"Erro ao realizar cadastro\");\n          navigation.navigate(\"Erro\");\n        }\n      }).catch(function (error) {\n        setAtivaLoad(false);\n        console.log(\"Erro ao realizar cadastro | Erro: \" + error);\n        navigation.navigate(\"Erro\");\n      });\n    }\n  }\n\n  function camposValidos(usuario) {\n    return usuario.nome == '' || usuario.cpf == '' || usuario.celular == '' || usuario.usuario == '' || usuario.senha == '' ? false : true;\n  }\n\n  function ExibirMensagemErro(flag) {\n    if (flag) {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Verifique as informa\\xE7\\xF5es do formul\\xE1rio!\"));\n    }\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.containerCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, ExibirMensagemErro(ativaErro), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setNome,\n      placeholder: \"Nome\",\n      value: nome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setCpf,\n      placeholder: \"CPF\",\n      value: cpf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setCelular,\n      placeholder: \"Celular\",\n      value: celular,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setUser,\n      placeholder: \"Usu\\xE1rio\",\n      value: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setPassword,\n      placeholder: \"Senha\",\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.conteinerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      color: \"#2F2E2E\",\n      title: \"Cadastrar\",\n      accessibilityLabel: \"Bot\\xE3o que realiza o cadastro de usu\\xE1rio\",\n      onPress: realizarCadastro,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  containerInput: {\n    alignItems: 'baseline',\n    flexDirection: 'row'\n  },\n  containerCard: {\n    backgroundColor: '#151A21',\n    padding: 30,\n    shadowColor: 'white',\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 10\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#151A21',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  inputStyle: {\n    backgroundColor: 'none',\n    borderBottomColor: 'gray',\n    borderBottomWidth: 2,\n    borderRadius: 1,\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 5,\n    width: 300\n  },\n  conteinerButton: {\n    alignItems: 'center',\n    flex: 1,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/usuarios/cadastro-usuario/CadastroUsuario.js"],"names":["React","useState","useAsyncStorage","cadastrarUsuario","cadastrarUsuarioTeste","Loading","CadastroUsuario","route","navigation","nome","setNome","cpf","setCpf","celular","setCelular","user","setUser","password","setPassword","ativaLoad","setAtivaLoad","ativaErro","setAtivaErro","idCondominio","idUsuario","getItem","setItem","realizarCadastro","usuario","camposValidos","then","retorno","sts","navigate","console","log","catch","error","senha","ExibirMensagemErro","flag","ExibeLoad","ExibeDados","styles","container","containerCard","containerInput","inputStyle","conteinerButton","Exibir","flex","StyleSheet","create","alignItems","flexDirection","backgroundColor","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","justifyContent","borderBottomColor","borderBottomWidth","borderRadius","marginBottom","paddingHorizontal","marginTop"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button,StyleSheet, Text, TextInput, View} from 'react-native';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\n\nimport { cadastrarUsuario, cadastrarUsuarioTeste } from '../../../services/usuario.service';\n\nimport Loading from '../../../utils/util';\n\nexport default function CadastroUsuario({ route, navigation }) {\n\n    const [nome, setNome] = useState('');\n    const [cpf, setCpf] = useState('');\n    const [celular, setCelular] = useState('');\n    const [user, setUser] = useState('');\n    const [password, setPassword] = useState('');\n    const [ativaLoad, setAtivaLoad] = useState(false);\n    const [ativaErro, setAtivaErro] = useState(false);\n    //const { idCondominio, idUsuario } = route.params;\n    const idCondominio = \"1\"\n    const idUsuario = \"1\"\n\n    const { getItem, setItem } = useAsyncStorage('idUsuario');\n\n    //REALIZA O CADASTRO DE UM USUÁRIO COM OS DADOS DO FORM\n    function realizarCadastro () { \n\n        var usuario = {\n            \"nome\": nome,\n            \"cpf\": cpf,\n            \"telefone\": celular,\n            \"login\": user,\n            \"senha\": password,\n            \"nivelAcesso\": 0\n        };\n\n        if(!camposValidos(usuario)){\n            setAtivaErro(true);                      \n            return false;\n        }else{\n            setAtivaErro(false); \n            setAtivaLoad(true);\n            cadastrarUsuarioTeste(usuario).then((retorno) => {\n                if (retorno.sts == 201) {\n                    setAtivaLoad(false);\n                    navigation.navigate(\"ListaUsuarios\", { idCondominio: idCondominio, idUsuario: idUsuario });                \n                } else {\n                    setAtivaLoad(false);\n                    console.log(\"Erro ao realizar cadastro\");\n                    navigation.navigate(\"Erro\");\n                }\n            }).catch((error) => {\n                setAtivaLoad(false);\n                console.log(\"Erro ao realizar cadastro | Erro: \" + error);\n                navigation.navigate(\"Erro\");\n            })\n        }\n    }\n\n    //VERIFICA SE TEM ALGUM CAMPO SEM PREENCHIMENTO\n    function camposValidos(usuario){\n        return usuario.nome == '' || usuario.cpf == '' || usuario.celular == '' || usuario.usuario == '' || usuario.senha == '' ? false : true;        \n    }\n\n    //EXIBE MENSAGEM DE ERRO CASO EXISTA\n    function ExibirMensagemErro(flag){\n        if(flag){\n            return (\n                <View>\n                    <Text>Verifique as informações do formulário!</Text>\n                </View>\n            )\n        }        \n    }\n\n    //EXIBE LOADING DE CARREGAMENTO\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    //EXIBE OS DADOS DA TELA\n    function ExibeDados() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.containerCard}>\n                    {ExibirMensagemErro(ativaErro)}\n\n                    <View style={styles.containerInput}>\n                        <TextInput style={styles.inputStyle}\n                            keyboardType=\"text\"\n                            onChangeText={setNome}\n                            placeholder=\"Nome\"\n                            value={nome} />\n                    </View>\n                    <View style={styles.containerInput}>\n                        <TextInput style={styles.inputStyle}\n                            keyboardType=\"text\"\n                            onChangeText={setCpf}\n                            placeholder=\"CPF\"\n                            value={cpf} />\n                    </View>\n                    <View style={styles.containerInput}>\n                        <TextInput style={styles.inputStyle}\n                            keyboardType=\"text\"\n                            onChangeText={setCelular}\n                            placeholder=\"Celular\"\n                            value={celular} />\n                    </View>\n                    <View style={styles.containerInput}>\n                        <TextInput style={styles.inputStyle}\n                            keyboardType=\"text\"\n                            onChangeText={setUser}\n                            placeholder=\"Usuário\"\n                            value={user} />\n                    </View>\n                    <View style={styles.containerInput}>\n                        <TextInput style={styles.inputStyle}\n                            keyboardType=\"text\"\n                            onChangeText={setPassword}\n                            placeholder=\"Senha\"\n                            value={password} />\n                    </View>\n                    <View style={styles.conteinerButton}>\n                        <Button\n                            color=\"#2F2E2E\"\n                            title=\"Cadastrar\"\n                            accessibilityLabel=\"Botão que realiza o cadastro de usuário\"\n                            onPress={realizarCadastro} />\n                    </View>\n                </View>\n            </View>\n        );\n    }\n\n    //VALIDA SE EXIBE O LOADING DE CARREGAMENTO OU OS DADOS DA TELA\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View style={{ flex: 1 }}>\n\n            {Exibir(ativaLoad)}\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    containerInput: {\n        alignItems: 'baseline',\n        flexDirection: 'row'\n    },\n    containerCard: {\n        backgroundColor: '#151A21',\n        padding: 30,\n        shadowColor: 'white',\n        shadowOffset: {\n            width: 1,\n            height: 1\n        },\n        shadowOpacity: 0.1,\n        shadowRadius: 10\n\n    },\n    container: {\n        alignItems: 'center',\n        backgroundColor: '#151A21',\n        flex: 1,\n        justifyContent: 'center',\n        padding: 16,\n\n    },\n    inputStyle: {\n        backgroundColor: 'none',\n        borderBottomColor: 'gray',\n        borderBottomWidth: 2,\n        borderRadius: 1,\n        height: 40,\n        marginBottom: 10,\n        paddingHorizontal: 5,\n        width: 300\n    },\n    conteinerButton: {\n        alignItems: 'center',\n        flex: 1,\n        marginTop: 30\n    }\n});"]},"metadata":{},"sourceType":"module"}