{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/usuarios/lista-usuarios/ListaUsuarios.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { listarUsuarios, listarUsuariosTeste } from \"../../../services/usuario.service\";\nimport Loading from \"../../../utils/util\";\nexport default function ListaUsuarios(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ativaLoad = _useState4[0],\n      setAtivaLoad = _useState4[1];\n\n  useEffect(function () {\n    setAtivaLoad(true);\n    listarUsuariosTeste().then(function (retorno) {\n      setAtivaLoad(false);\n\n      if (retorno.sts != 200) {\n        console.log(\"Erro ao consultar usu치rios\");\n        navigation.navigate(\"Erro\");\n      }\n\n      retorno.dados.then(function (dados) {\n        setLista(dados);\n        console.log(dados);\n        setAtivaLoad(false);\n      });\n    }).catch(function (error) {\n      setAtivaLoad(false);\n      console.log(\"Erro ao consultar usu치rios | Erro: \" + error);\n    });\n  }, []);\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    var _this = this;\n\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(FlatList, {\n      data: lista,\n      keyExtractor: function keyExtractor(item) {\n        return item.nome;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(View, {\n          style: styles.itemContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }, \"Nome: \", item.nome), React.createElement(Text, {\n          style: styles.text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, \"CPF: \", item.cpf), React.createElement(Text, {\n          style: styles.text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, \"Celular: \", item.celular));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  itemContainer: {\n    backgroundColor: '#292E33',\n    borderRadius: 10,\n    margin: 8,\n    padding: 8\n  },\n  text: {\n    color: 'white',\n    flexWrap: 'wrap',\n    fontFamily: 'Calibri',\n    padding: 1\n  },\n  container: {\n    backgroundColor: '#151A21',\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/usuarios/lista-usuarios/ListaUsuarios.js"],"names":["React","useEffect","useState","listarUsuarios","listarUsuariosTeste","Loading","ListaUsuarios","route","navigation","lista","setLista","ativaLoad","setAtivaLoad","then","retorno","sts","console","log","navigate","dados","catch","error","ExibeLoad","ExibeDados","styles","container","item","nome","itemContainer","text","cpf","celular","Exibir","flag","flex","StyleSheet","create","backgroundColor","borderRadius","margin","padding","color","flexWrap","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FlatList, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { listarUsuarios, listarUsuariosTeste } from '../../../services/usuario.service';\n\nimport Loading from '../../../utils/util';\n\nexport default function ListaUsuarios({ route, navigation }) {\n    const [lista, setLista] = useState([]);\n    //const { idApartamento, idCondominio } = route.params;\n    const [ativaLoad, setAtivaLoad] = useState(false);\n\n    useEffect(() => {        \n        setAtivaLoad(true);\n        //listarUsuarios(idApartamento).then((retorno) => {\n        listarUsuariosTeste().then((retorno) => {\n            setAtivaLoad(false);\n            if (retorno.sts != 200) {                \n                console.log(\"Erro ao consultar usu치rios\");\n                navigation.navigate(\"Erro\");\n            }\n            retorno.dados.then((dados) => {                                \n                //setLista(dados.data);\n                setLista(dados);\n                console.log(dados)\n                setAtivaLoad(false);\n                \n            })\n        }).catch((error) => {\n            setAtivaLoad(false);\n            console.log(\"Erro ao consultar usu치rios | Erro: \" + error);\n        });\n\n      }, [])\n\n    //EXIBE LOADING DE CARREGAMENTO\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    //EXIBE OS DADOS DA TELA\n    function ExibeDados() {\n        return (\n            <View style={styles.container}>                \n                <FlatList\n                    data={lista}\n                    keyExtractor={item => item.nome}\n                    renderItem={({ item }) => (\n                    <View style={styles.itemContainer}>\n                        <Text style={styles.text}>Nome: { item.nome }</Text>\n                        <Text style={styles.text}>CPF: { item.cpf }</Text>\n                        <Text style={styles.text}>Celular: { item.celular }</Text>\n                    </View>\n                    )}\n                />\n                {/* <Footer /> */}\n            </View>\n        );\n    }\n\n    //VALIDA SE EXIBE O LOADING DE CARREGAMENTO OU OS DADOS DA TELA\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View style={{ flex: 1 }}>\n            {Exibir(ativaLoad)}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    itemContainer: {\n        backgroundColor: '#292E33',\n        borderRadius: 10,\n        margin: 8,\n        padding: 8\n    },\n    text: {\n        color: 'white',\n        flexWrap: 'wrap',\n        fontFamily: 'Calibri',\n        padding: 1\n    },\n    container: {\n        backgroundColor: '#151A21',\n        flex: 1\n    }\n});"]},"metadata":{},"sourceType":"module"}