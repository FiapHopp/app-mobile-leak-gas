{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImagemApartamento from \"./lista-apartamento-imagem/ImagemApartamento\";\nimport { buscarApartamentos, atualizarOcorrenciaApartamento } from \"../../services/apartamento.service\";\nimport Footer from \"../Footer\";\nimport Loading from \"../../utils/util\";\nimport ModalConfirmacao from \"./modal-confirmacao-ocorrencia/Modal\";\nexport default function ListaApartamentos() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ativaLoad = _useState4[0],\n      setAtivaLoad = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  useEffect(function () {\n    buscarApartamentos().then(function (retorno) {\n      retorno.dados.then(function (data) {\n        setLista(data);\n      });\n    }).catch(function (error) {});\n  }, []);\n\n  function atualizaOcorrencia(id_apartamento) {\n    atualizarOcorrenciaApartamento(id_apartamento);\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function exibeImagem(apartamento) {\n    if (!apartamento.alarme) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return atualizaOcorrencia(apartamento.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function ExibeDados() {\n    var _this = this;\n\n    return React.createElement(View, {\n      style: styles.containerLista,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(FlatList, {\n      data: lista,\n      keyExtractor: function keyExtractor(item) {\n        return item.nome;\n      },\n      contentContainerStyle: styles.container,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }\n        }, exibeImagem(item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(ModalConfirmacao, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, Exibir(ativaLoad)));\n}\nvar styles = StyleSheet.create({\n  containerLista: {\n    flex: 1,\n    marginTop: 20\n  },\n  container: {\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js"],"names":["React","useState","useEffect","ImagemApartamento","buscarApartamentos","atualizarOcorrenciaApartamento","Footer","Loading","ModalConfirmacao","ListaApartamentos","lista","setLista","ativaLoad","setAtivaLoad","modalVisible","setModalVisible","then","retorno","dados","data","catch","error","atualizaOcorrencia","id_apartamento","ExibeLoad","exibeImagem","apartamento","alarme","id","ExibeDados","styles","containerLista","item","nome","container","Exibir","flag","StyleSheet","create","flex","marginTop","justifyContent","flexDirection","flexWrap","centeredView","alignItems","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, StyleSheet, Text, TouchableOpacity, View, Modal, Pressable, Alert } from 'react-native';\n\nimport ImagemApartamento from './lista-apartamento-imagem/ImagemApartamento';\nimport { buscarApartamentos, atualizarOcorrenciaApartamento } from '../../services/apartamento.service';\n\nimport Footer from '../Footer';\nimport Loading from '../../utils/util';\nimport ModalConfirmacao from './modal-confirmacao-ocorrencia/Modal'\n\n\n\nexport default function ListaApartamentos() {\n    const [lista, setLista] = useState([]);\n    const [ativaLoad, setAtivaLoad] = useState(false);\n    const [modalVisible, setModalVisible] = useState(true);\n\n    useEffect(() => {\n        buscarApartamentos().then((retorno) => {\n            retorno.dados.then((data) => {\n                setLista(data);\n            })\n        }).catch((error) => {\n            //exibir mensagem na tela dizendo que senha está errado\n        })\n    }, [])\n\n    function atualizaOcorrencia(id_apartamento) {\n        atualizarOcorrenciaApartamento(id_apartamento)       \n    }\n\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    function exibeImagem(apartamento) {\n        if (!apartamento.alarme) {\n            return (\n                <TouchableOpacity onPress={() => atualizaOcorrencia(apartamento.id)}>\n                    <View>\n                        <ImagemApartamento apartamento={apartamento} />\n                    </View>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View>\n                    <ImagemApartamento apartamento={apartamento} />\n                </View>\n            )\n        }\n    }\n\n    function ExibeDados() {\n        return (\n            <View style={styles.containerLista}>                \n                <FlatList\n                    data={lista}\n                    keyExtractor={item => item.nome}\n                    contentContainerStyle={styles.container}\n                    renderItem={({ item }) => (\n                        <View>\n                            {exibeImagem(item)}\n                        </View>\n                    )} />\n            </View>\n        );\n    }\n\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View>\n            <ModalConfirmacao/>\n            <View style={{  }}>\n                \n                {Exibir(ativaLoad)}            \n\n            </View>\n        </View>\n    );\n\n\n}\nconst styles = StyleSheet.create({\n    containerLista: {\n        flex: 1,\n        marginTop: 20\n    },\n    container: {\n        justifyContent: 'space-around',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});"]},"metadata":{},"sourceType":"module"}