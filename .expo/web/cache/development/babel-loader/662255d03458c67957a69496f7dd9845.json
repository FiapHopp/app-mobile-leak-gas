{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/login/Login.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport { logar } from \"../../services/login.service\";\nimport getImage from \"../../utils/Images\";\nimport Loading from \"../../utils/util\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ativaLoad = _useState6[0],\n      setAtivaLoad = _useState6[1];\n\n  var _useState7 = useState('2'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ativaErro = _useState8[0],\n      setAtivaErro = _useState8[1];\n\n  var _useAsyncStorage = useAsyncStorage('idUsuario'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  function realizarLoginTeste() {\n    var usuario = {\n      \"usuario\": user,\n      \"senha\": password\n    };\n\n    if (!camposValidos(usuario)) {\n      setAtivaErro('0');\n      return false;\n    } else {\n      setAtivaLoad(true);\n      navigation.navigate(\"ListaCondominios\", {\n        idUsuario: \"1\"\n      });\n    }\n  }\n\n  function camposValidos(usuario) {\n    return usuario.usuario == '' || usuario.senha == '' ? false : true;\n  }\n\n  function ExibirMensagemErro(flag) {\n    if (flag == '0') {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Por favor, preencha todos os campos!\"));\n    } else if (flag == '1') {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"Usu\\xE1rio ou senha incorretos\"));\n    }\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    return React.createElement(ImageBackground, {\n      source: getImage('background'),\n      imageStyle: styles.imageBackground,\n      style: styles.imageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImage('logo-transparente'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setUser,\n      placeholder: \"usu\\xE1rio\",\n      value: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"password\",\n      onChangeText: setPassword,\n      placeholder: \"senha\",\n      secureTextEntry: true,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), ExibirMensagemErro(ativaErro), React.createElement(View, {\n      style: styles.conteinerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      style: styles.button,\n      color: \"#2F2E2E\",\n      title: \"Entrar na minha conta\",\n      accessibilityLabel: \"Bot\\xE3o que realiza o login\",\n      onPress: realizarLoginTeste,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  image: {\n    height: 200,\n    resizeMode: 'stretch',\n    width: 200\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'black',\n    flex: 1,\n    opacity: 0.7,\n    padding: 16\n  },\n  imageContainer: {\n    flex: 1\n  },\n  inputStyle: {\n    backgroundColor: 'white',\n    borderColor: 'gray',\n    borderRadius: 1,\n    borderWidth: 2,\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 5,\n    width: 300\n  },\n  imageBackground: {\n    flex: 1,\n    height: null,\n    resizeMode: 'cover',\n    width: null\n  },\n  conteinerButton: {\n    alignItems: 'center',\n    flex: 1,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/login/Login.js"],"names":["React","useState","useAsyncStorage","logar","getImage","Loading","Login","navigation","user","setUser","password","setPassword","ativaLoad","setAtivaLoad","ativaErro","setAtivaErro","getItem","setItem","realizarLoginTeste","usuario","camposValidos","navigate","idUsuario","senha","ExibirMensagemErro","flag","fontSize","color","ExibeLoad","ExibeDados","styles","imageBackground","imageContainer","container","image","inputStyle","conteinerButton","button","Exibir","flex","StyleSheet","create","height","resizeMode","width","alignItems","backgroundColor","opacity","padding","borderColor","borderRadius","borderWidth","marginBottom","paddingHorizontal","marginTop"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button, Image, ImageBackground, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { useAsyncStorage } from '@react-native-async-storage/async-storage';\n\nimport { logar } from '../../services/login.service';\nimport getImage from '../../utils/Images';\n\nimport Loading from '../../utils/util';\n\nexport default function Login({ navigation }) {\n\n    const [user, setUser] = useState('');\n    const [password, setPassword] = useState('');\n    const [ativaLoad, setAtivaLoad] = useState(false);\n    const [ativaErro, setAtivaErro] = useState('2'); //0-falta preenchimento, 1-usuario ou senha incorretos, 2-nao exibe\n    const { getItem, setItem } = useAsyncStorage('idUsuario');\n\n\n    function realizarLoginTeste() {\n        var usuario = {\n            \"usuario\": user,\n            \"senha\": password\n        };\n\n        if (!camposValidos(usuario)) {\n            setAtivaErro('0');\n            return false;\n        } else {\n            setAtivaLoad(true);\n            //VERIFICA SE O USUÁRIO EXISTE\n            navigation.navigate(\"ListaCondominios\", { idUsuario: \"1\" });\n        }\n    }\n\n    /*\n    function realizarLogin() {            \n        var usuario = {\n            \"usuario\": user,\n            \"senha\": password\n        };\n\n        if(!camposValidos(usuario)){            \n            setAtivaErro('0');\n            return false;\n        }else{\n            setAtivaLoad(true);\n            //VERIFICA SE O USUÁRIO EXISTE\n            logar(usuario).then((retorno) => {                    \n                setAtivaLoad(false);\n                if(retorno.sts == 200){                    \n                    retorno.dados.then((dados) => {                        \n                        setAtivaErro('2');\n                        setItem(dados.data.idUsuario);\n                        navigation.navigate(\"ListaCondominios\", { idUsuario: dados.data.idUsuario });\n                    }); \n                }else if(retorno.sts === 400){                    \n                    retorno.dados.then((dados) => {\n                        if(dados.errors[0] == 'Usuário ou senha incorretos'){\n                            setAtivaErro('1');\n                        }else{\n                            console.log(\"Erro ao realizar login\");\n                            navigation.navigate(\"Erro\");\n                        }\n                    }) \n                }else{\n                    setAtivaLoad(false);\n                    setAtivaErro('2');                    \n                    console.log(\"Erro ao realizar login\");\n\n                }\n            }).catch((error) => {\n                setAtivaLoad(false);\n                setAtivaErro('2');\n                console.log(\"Erro ao realizar login | Erro: \" + error);\n                navigation.navigate(\"Erro\"); \n            });\n\n        }        \n    }\n    */\n\n    //VERIFICA SE TEM ALGUM CAMPO SEM PREENCHIMENTO\n    function camposValidos(usuario) {\n        return usuario.usuario == '' || usuario.senha == '' ? false : true;\n    }\n\n    //VERIFICA QUAL O ERRO E CASO EXISTA INFORMA UMA MENSAGEM PARA O USUÁRIO\n    function ExibirMensagemErro(flag) {\n        if (flag == '0') {\n            return (\n                <View>\n                    <Text style={{ fontSize: 20, color: 'white' }}>Por favor, preencha todos os campos!</Text>\n                </View>\n            )\n        } else if (flag == '1') {\n            return (\n                <View>\n                    <Text style={{ fontSize: 20, color: 'white' }}>Usuário ou senha incorretos</Text>\n                </View>\n            )\n        }\n    }\n\n    //EXIBE LOADING DE CARREGAMENTO\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    //EXIBE OS DADOS DA TELA\n    function ExibeDados() {\n        return (\n            <ImageBackground\n                source={getImage('background')}\n                imageStyle={styles.imageBackground}\n                style={styles.imageContainer}>\n                <View style={styles.container}>\n                    <Image\n                        style={styles.image}\n                        source={getImage('logo-transparente')} />\n                    <TextInput style={styles.inputStyle}\n                        keyboardType=\"text\"\n                        onChangeText={setUser}\n                        placeholder=\"usuário\"\n                        value={user} />\n                    <TextInput style={styles.inputStyle}\n                        keyboardType=\"password\"\n                        onChangeText={setPassword}\n                        placeholder=\"senha\"\n                        secureTextEntry={true}\n                        value={password} />\n\n                    {ExibirMensagemErro(ativaErro)}\n\n                    <View style={styles.conteinerButton}>\n                        <Button style={styles.button}\n                            color=\"#2F2E2E\"\n                            title=\"Entrar na minha conta\"\n                            accessibilityLabel=\"Botão que realiza o login\"\n                            onPress={realizarLoginTeste} />\n                    </View>\n                </View>\n            </ImageBackground>\n        );\n    }\n\n    //VALIDA SE EXIBE O LOADING DE CARREGAMENTO OU OS DADOS DA TELA\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View style={{ flex: 1 }}>\n            {Exibir(ativaLoad)}\n        </View>\n    );\n\n}\nconst styles = StyleSheet.create({\n    image: {\n        height: 200,\n        resizeMode: 'stretch',\n        width: 200\n    },\n    container: {\n        alignItems: 'center',\n        backgroundColor: 'black',\n        flex: 1,\n        opacity: 0.7,\n        padding: 16\n    },\n    imageContainer: {\n        flex: 1\n    },\n    inputStyle: {\n        backgroundColor: 'white',\n        borderColor: 'gray',\n        borderRadius: 1,\n        borderWidth: 2,\n        height: 40,\n        marginBottom: 10,\n        paddingHorizontal: 5,\n        width: 300\n    },\n    imageBackground: {\n        flex: 1,\n        height: null,\n        resizeMode: 'cover',\n        width: null\n    },\n    conteinerButton: {\n        alignItems: 'center',\n        flex: 1,\n        marginTop: 30\n    },\n});"]},"metadata":{},"sourceType":"module"}