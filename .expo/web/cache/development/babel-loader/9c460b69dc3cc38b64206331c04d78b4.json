{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { atualizarOcorrenciaApartamento, buscarApartamentos, buscarApartamentosTeste } from \"../../services/apartamento.service\";\nimport ImagemApartamento from \"./lista-apartamento-imagem/ImagemApartamento\";\nimport Loading from \"../../utils/util\";\nexport default function ListaApartamentos(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lista = _useState2[0],\n      setLista = _useState2[1];\n\n  var idCondominio = \"1\";\n  var idUsuario = \"1\";\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ativaLoad = _useState4[0],\n      setAtivaLoad = _useState4[1];\n\n  useEffect(function () {\n    buscaApartamentos();\n  }, []);\n\n  function atualizaOcorrencia(id_apartamento) {\n    setAtivaLoad(true);\n    atualizarOcorrenciaApartamento(id_apartamento).then(function (retorno) {\n      if (retorno.sts == 200) {\n        console.log(\"Sucesso ao atualizar ocorrência\");\n        buscaApartamentos();\n      } else {\n        setAtivaLoad(false);\n        console.log(\"Erro ao atualizar ocorrência\");\n      }\n    }).catch(function (error) {\n      console.log(\"Erro ao atualizar ocorrência | Erro: \" + error);\n      setAtivaLoad(false);\n    });\n  }\n\n  function buscaApartamentos() {\n    setAtivaLoad(true);\n    buscarApartamentosTeste().then(function (retorno) {\n      if (retorno.sts == 200) {\n        console.log(\"Sucesso ao buscar lista de apartamentos\");\n        setAtivaLoad(false);\n        retorno.dados.then(function (data) {\n          setLista(data);\n        });\n      } else {\n        setAtivaLoad(false);\n        console.log(\"Erro ao buscar lista de apartamentos\");\n        navigation.navigate(\"Erro\");\n      }\n    }).catch(function (error) {\n      setAtivaLoad(false);\n      console.log(\"Erro ao buscar lista de apartamentos | Erro: \" + error);\n      navigation.navigate(\"Erro\");\n    });\n  }\n\n  function exibeImagem(apartamento) {\n    if (!apartamento.ativo) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return atualizaOcorrencia(apartamento.idApartamento);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      })));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(ImagemApartamento, {\n        apartamento: apartamento,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    var _this = this;\n\n    return React.createElement(View, {\n      style: styles.containerLista,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"ListaUsuarios\", {\n          idCondominio: idCondominio,\n          idUsuario: idUsuario\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Lista usu\\xE1rio\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"ListaCondominios\", {\n          idCondominio: idCondominio,\n          idUsuario: idUsuario\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Lista condom\\xEDnios\")), React.createElement(FlatList, {\n      data: lista,\n      keyExtractor: function keyExtractor(item) {\n        return item.nome;\n      },\n      contentContainerStyle: styles.container,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        }, exibeImagem(item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function Exibir(flag) {\n    return flag ? ExibeLoad() : ExibeDados();\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  containerLista: {\n    flex: 1,\n    marginTop: 20\n  },\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around'\n  },\n  textButton: {\n    color: '#151A21',\n    fontSize: 20,\n    margin: 20,\n    textDecorationLine: 'underline',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/lista-apartamentos/ListaApartamentos.js"],"names":["React","useState","useEffect","atualizarOcorrenciaApartamento","buscarApartamentos","buscarApartamentosTeste","ImagemApartamento","Loading","ListaApartamentos","route","navigation","lista","setLista","idCondominio","idUsuario","ativaLoad","setAtivaLoad","buscaApartamentos","atualizaOcorrencia","id_apartamento","then","retorno","sts","console","log","catch","error","dados","data","navigate","exibeImagem","apartamento","ativo","idApartamento","ExibeLoad","ExibeDados","styles","containerLista","textButton","item","nome","container","Exibir","flag","flex","StyleSheet","create","marginTop","flexDirection","flexWrap","justifyContent","color","fontSize","margin","textDecorationLine","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { atualizarOcorrenciaApartamento, buscarApartamentos, buscarApartamentosTeste } from '../../services/apartamento.service';\n\nimport ImagemApartamento from './lista-apartamento-imagem/ImagemApartamento';\nimport Loading from '../../utils/util';\n\nexport default function ListaApartamentos({ route, navigation }) {\n    const [lista, setLista] = useState([]);\n    //const { idCondominio, idUsuario } = route.params;\n    const idCondominio = \"1\";    \n    const idUsuario = \"1\"\n    const [ativaLoad, setAtivaLoad] = useState(false);\n\n    \n    useEffect(() => {\n        buscaApartamentos();\n    }, [])\n\n    //ATUALIZA OCORRÊNCIA PARA NORMALIZADA DO APARTAMENTO SELECIONADO\n    function atualizaOcorrencia(id_apartamento) {\n        setAtivaLoad(true)\n        atualizarOcorrenciaApartamento(id_apartamento).then((retorno) => {\n            if(retorno.sts == 200){\n                console.log(\"Sucesso ao atualizar ocorrência\")\n                buscaApartamentos()\n            }else{\n                setAtivaLoad(false)\n                console.log(\"Erro ao atualizar ocorrência\")\n            }\n        }).catch((error) => {\n            console.log(\"Erro ao atualizar ocorrência | Erro: \" + error)\n            setAtivaLoad(false)            \n        });\n    }\n\n    //BUSCA A LISTA DE TODOS OS APARTAMENTOS ATRAVÉS DO ID DO CONDOMINIO SELECIONADO\n    function buscaApartamentos(){\n        setAtivaLoad(true)        \n        //buscarApartamentos(idCondominio).then((retorno) => {\n        buscarApartamentosTeste().then((retorno) => {\n            if(retorno.sts == 200){\n                console.log(\"Sucesso ao buscar lista de apartamentos\");\n                setAtivaLoad(false)\n                retorno.dados.then((data) => {\n                    setLista(data);\n                })\n            }else{\n                setAtivaLoad(false)\n                console.log(\"Erro ao buscar lista de apartamentos\");\n                navigation.navigate(\"Erro\"); \n            }\n            \n        }).catch((error) => {\n            setAtivaLoad(false)\n            console.log(\"Erro ao buscar lista de apartamentos | Erro: \" + error);\n            navigation.navigate(\"Erro\");             \n        })\n    }\n    \n    //VERIFICA SE EXIBE IMAGEM DE ALARME OU DE STATUS NORMALIZADO\n    function exibeImagem(apartamento) {\n        if (!apartamento.ativo) {\n            return (\n                <TouchableOpacity onPress={() => atualizaOcorrencia(apartamento.idApartamento)}>\n                    <View>\n                        <ImagemApartamento apartamento={apartamento} />\n                    </View>\n                </TouchableOpacity>\n            )\n        } else {\n            return (\n                <View>\n                    <ImagemApartamento apartamento={apartamento} />\n                </View>\n            )\n        }\n    }\n\n    //EXIBE LOADING DE CARREGAMENTO\n    function ExibeLoad() {\n        return (\n            <Loading />\n        );\n    }\n\n    //EXIBE OS DADOS DA TELA\n    function ExibeDados() {\n        return (\n            <View style={styles.containerLista}>                \n                <TouchableOpacity\n                    onPress={()=>{navigation.navigate(\"ListaUsuarios\", { idCondominio: idCondominio, idUsuario: idUsuario });                }}>\n                    <Text style={ styles.textButton }>Lista usuário</Text>\n                </TouchableOpacity> \n                <TouchableOpacity\n                    onPress={()=>{navigation.navigate(\"ListaCondominios\", { idCondominio: idCondominio, idUsuario: idUsuario }) }}>\n                    <Text style={ styles.textButton }>Lista condomínios</Text>\n                </TouchableOpacity> \n                <FlatList\n                    data={lista}\n                    keyExtractor={item => item.nome}\n                    contentContainerStyle={styles.container}\n                    renderItem={({ item }) => (\n                        <View>\n                            {exibeImagem(item)}\n                        </View>\n                    )} />\n            </View>\n        );\n    }\n\n    //VALIDA SE EXIBE O LOADING DE CARREGAMENTO OU OS DADOS DA TELA\n    function Exibir(flag) {\n        return flag ? ExibeLoad() : ExibeDados();\n    }\n\n    return (\n        <View style={{ flex:1 }}>                \n            {Exibir(ativaLoad)}                    \n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    containerLista: {\n        flex: 1,\n        marginTop: 20\n    },\n    container: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n    },\n    textButton:{\n        color: '#151A21',\n        fontSize: 20,\n        margin: 20,\n        textDecorationLine: 'underline', \n        textAlign: 'center'\n    }\n});"]},"metadata":{},"sourceType":"module"}