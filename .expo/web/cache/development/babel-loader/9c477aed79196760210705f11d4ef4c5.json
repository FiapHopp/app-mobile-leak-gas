{"ast":null,"code":"export function getConnectionAPI(url) {\n  var teste = [];\n  return fetch(url).then(function (response) {\n    var retorno = {\n      sts: response.status,\n      dados: response.json()\n    };\n    return retorno;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function postConnectionAPI(url, body) {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (response) {\n    var retorno = {\n      sts: response.status,\n      dados: response.json()\n    };\n    return retorno;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function patchConnectionAPI(url, body) {\n  return fetch(url, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseJson) {\n    return responseJson;\n  }).catch(function (error) {\n    console.error(\"Erro: \" + error);\n  });\n}\nexport function deleteConnectionAPI(url, body) {\n  if (body) {\n    return fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      return responseJson;\n    }).catch(function (error) {\n      console.error(\"Erro: \" + error);\n    });\n  } else {\n    return fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      return responseJson;\n    }).catch(function (error) {\n      console.error(\"Erro: \" + error);\n    });\n  }\n}","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/utils/ConnectionAPI.js"],"names":["getConnectionAPI","url","teste","fetch","then","response","retorno","sts","status","dados","json","catch","error","console","postConnectionAPI","body","method","headers","Accept","JSON","stringify","patchConnectionAPI","responseJson","deleteConnectionAPI"],"mappings":"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","sourcesContent":["export function getConnectionAPI(url) {\n    var teste = [];\n    return fetch(url)\n        .then((response) => {            \n            var retorno ={\n                sts: response.status,\n                dados: response.json()\n            }\n            return retorno;\n        })        \n        .catch((error) => {\n            console.error(\"Erro: \" + error);\n        });\n}\n\nexport function postConnectionAPI(url, body) {\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',            \n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    })\n    .then((response) => {            \n        var retorno ={\n            sts: response.status,\n            dados: response.json()\n        }\n        return retorno;\n    }) \n    .catch((error) => {\n        console.error(\"Erro: \" + error);\n    });\n}\n\nexport function patchConnectionAPI(url, body) {\n    return fetch(url, {\n        method: 'PATCH',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n        return responseJson;\n    })\n    .catch((error) => {\n        console.error(\"Erro: \" + error);\n    });\n}\n\nexport function deleteConnectionAPI(url, body) {\n    if (body) {\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                console.error(\"Erro: \" + error);\n            });\n    } else {\n        return fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                return responseJson;\n            })\n            .catch((error) => {\n                console.error(\"Erro: \" + error);\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}