{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/Login.js\";\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { logar, cadastrar, alterar, deletar } from \"../services/login.service\";\nimport getImage from \"../utils/Images\";\nimport Loading from \"../utils/util\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ativaLoad = _useState6[0],\n      setAtivaLoad = _useState6[1];\n\n  function realizarLogin() {\n    setAtivaLoad(true);\n    var usuario = {\n      \"usuario\": user,\n      \"senha\": password\n    };\n    logar(usuario).then(function (retorno) {\n      if (retorno.sts == 200) {\n        retorno.dados.then(function (dados) {\n          setAtivaLoad(false);\n          navigation.navigate(\"ListaCondominios\", {\n            idUsuario: dados.data.idUsuario\n          });\n        });\n      } else {\n        setAtivaLoad(false);\n        console.log(\"STATUS: \" + retorno.sts);\n      }\n    }).catch(function (error) {\n      setAtivaLoad(false);\n      console.log(\"Erro ao realizar login: \" + error);\n      navigation.navigate(\"Erro\");\n    });\n  }\n\n  function ExibeLoad() {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n  function ExibeDados() {\n    return React.createElement(ImageBackground, {\n      source: getImage('background'),\n      imageStyle: styles.imageBackground,\n      style: styles.imageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: getImage('logo-transparente'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"text\",\n      onChangeText: setUser,\n      placeholder: \"usu\\xE1rio\",\n      value: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), React.createElement(TextInput, {\n      style: styles.inputStyle,\n      keyboardType: \"password\",\n      onChangeText: setPassword,\n      placeholder: \"senha\",\n      secureTextEntry: true,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: styles.conteinerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      style: styles.button,\n      color: \"#2F2E2E\",\n      title: \"Entrar na minha conta\",\n      accessibilityLabel: \"Bot\\xE3o que realiza o login\",\n      onPress: realizarLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  function Exibir(flag) {\n    if (flag) {\n      return ExibeLoad();\n    } else {\n      return ExibeDados();\n    }\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, Exibir(ativaLoad));\n}\nvar styles = StyleSheet.create({\n  image: {\n    width: 200,\n    height: 200,\n    resizeMode: 'stretch'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    opacity: 0.7,\n    alignItems: 'center',\n    padding: 16\n  },\n  imageContainer: {\n    flex: 1\n  },\n  inputStyle: {\n    backgroundColor: 'white',\n    borderColor: 'gray',\n    borderRadius: 1,\n    borderWidth: 2,\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 5,\n    width: 300\n  },\n  imageBackground: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'cover'\n  },\n  conteinerButton: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["/Users/lucasdepaula/Documents/Github/app-mobile-leak-gas/components/Login.js"],"names":["React","useEffect","useState","useReducer","logar","cadastrar","alterar","deletar","getImage","Loading","Login","navigation","user","setUser","password","setPassword","ativaLoad","setAtivaLoad","realizarLogin","usuario","then","retorno","sts","dados","navigate","idUsuario","data","console","log","catch","error","ExibeLoad","ExibeDados","styles","imageBackground","imageContainer","container","image","inputStyle","conteinerButton","button","Exibir","flag","flex","StyleSheet","create","width","height","resizeMode","backgroundColor","opacity","alignItems","padding","borderColor","borderRadius","borderWidth","marginBottom","paddingHorizontal","marginTop"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;;;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,OAApC;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAE1C,kBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCb,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOc,SAAP;AAAA,MAAkBC,YAAlB;;AAGA,WAASC,aAAT,GAAyB;AACrBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIE,OAAO,GAAG;AACV,iBAAWP,IADD;AAEV,eAASE;AAFC,KAAd;AAIAV,IAAAA,KAAK,CAACe,OAAD,CAAL,CAAeC,IAAf,CAAoB,UAACC,OAAD,EAAa;AAC7B,UAAGA,OAAO,CAACC,GAAR,IAAe,GAAlB,EAAsB;AAClBD,QAAAA,OAAO,CAACE,KAAR,CAAcH,IAAd,CAAmB,UAACG,KAAD,EAAW;AAC1BN,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,UAAAA,UAAU,CAACa,QAAX,CAAoB,kBAApB,EAAwC;AAAEC,YAAAA,SAAS,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAAxB,WAAxC;AACH,SAHD;AAIH,OALD,MAKK;AACDR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAU,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaP,OAAO,CAACC,GAAjC;AACH;AACJ,KAXD,EAWGO,KAXH,CAWS,UAACC,KAAD,EAAW;AAChBb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BE,KAAzC;AACAnB,MAAAA,UAAU,CAACa,QAAX,CAAoB,MAApB;AACH,KAfD;AAiBH;;AACD,WAASO,SAAT,GAAoB;AAChB,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,WAASC,UAAT,GAAqB;AACjB,WACI,oBAAC,eAAD;AACA,MAAA,MAAM,EAAExB,QAAQ,CAAC,YAAD,CADhB;AAEA,MAAA,UAAU,EAAEyB,MAAM,CAACC,eAFnB;AAGA,MAAA,KAAK,EAAED,MAAM,CAACE,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEH,MAAM,CAACI,KADlB;AAEI,MAAA,MAAM,EAAE7B,QAAQ,CAAC,mBAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEyB,MAAM,CAACK,UAAzB;AACI,MAAA,YAAY,EAAC,MADjB;AAEI,MAAA,YAAY,EAAEzB,OAFlB;AAGI,MAAA,WAAW,EAAC,YAHhB;AAII,MAAA,KAAK,EAAED,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEqB,MAAM,CAACK,UAAzB;AACI,MAAA,YAAY,EAAC,UADjB;AAEI,MAAA,YAAY,EAAEvB,WAFlB;AAGI,MAAA,WAAW,EAAC,OAHhB;AAII,MAAA,eAAe,EAAE,IAJrB;AAKI,MAAA,KAAK,EAAED,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAgBI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEmB,MAAM,CAACM,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEN,MAAM,CAACO,MAAtB;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,KAAK,EAAC,uBAFV;AAGI,MAAA,kBAAkB,EAAC,8BAHvB;AAII,MAAA,OAAO,EAAEtB,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,CAJA,CADJ;AA+BH;;AAED,WAASuB,MAAT,CAAgBC,IAAhB,EAAqB;AACjB,QAAGA,IAAH,EAAQ;AACJ,aAAOX,SAAS,EAAhB;AACH,KAFD,MAEK;AACD,aAAOC,UAAU,EAAjB;AACH;AACJ;;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACW,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,CAACzB,SAAD,CADX,CADJ;AAMH;AACD,IAAMiB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,GAFL;AAGHC,IAAAA,UAAU,EAAE;AAHT,GADsB;AAM7BZ,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPM,IAAAA,eAAe,EAAE,OAFV;AAGPC,IAAAA,OAAO,EAAE,GAHF;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,OAAO,EAAE;AALF,GANkB;AAa7BjB,EAAAA,cAAc,EAAE;AACZQ,IAAAA,IAAI,EAAE;AADM,GAba;AAgB7BL,EAAAA,UAAU,EAAE;AACRW,IAAAA,eAAe,EAAE,OADT;AAERI,IAAAA,WAAW,EAAE,MAFL;AAGRC,IAAAA,YAAY,EAAE,CAHN;AAIRC,IAAAA,WAAW,EAAE,CAJL;AAKRR,IAAAA,MAAM,EAAE,EALA;AAMRS,IAAAA,YAAY,EAAE,EANN;AAORC,IAAAA,iBAAiB,EAAE,CAPX;AAQRX,IAAAA,KAAK,EAAE;AARC,GAhBiB;AA0B7BZ,EAAAA,eAAe,EAAE;AACbS,IAAAA,IAAI,EAAE,CADO;AAEbG,IAAAA,KAAK,EAAE,IAFM;AAGbC,IAAAA,MAAM,EAAE,IAHK;AAIbC,IAAAA,UAAU,EAAE;AAJC,GA1BY;AAgC7BT,EAAAA,eAAe,EAAE;AACbI,IAAAA,IAAI,EAAE,CADO;AAEbQ,IAAAA,UAAU,EAAE,QAFC;AAGbO,IAAAA,SAAS,EAAE;AAHE;AAhCY,CAAlB,CAAf","sourcesContent":["\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { Button, TextInput, ImageBackground, StyleSheet, Text, View, Image } from 'react-native';\nimport { logar, cadastrar, alterar, deletar } from '../services/login.service';\nimport getImage from '../utils/Images';\nimport Loading from '../utils/util';\n\nexport default function Login({ navigation }) {\n\n    const [user, setUser] = useState('');\n    const [password, setPassword] = useState('');    \n    const [ativaLoad, setAtivaLoad] = useState(false);\n    \n\n    function realizarLogin() {\n        setAtivaLoad(true)\n        var usuario = {\n            \"usuario\": user,\n            \"senha\": password\n        }            \n        logar(usuario).then((retorno) => {            \n            if(retorno.sts == 200){                    \n                retorno.dados.then((dados) => {\n                    setAtivaLoad(false)                \n                    navigation.navigate(\"ListaCondominios\", { idUsuario: dados.data.idUsuario });                                                        \n                }) \n            }else{\n                setAtivaLoad(false)\n                //exibir mensagem na tela dizendo que senha está errado\n                console.log(\"STATUS: \" + retorno.sts)\n            }\n        }).catch((error) => {\n            setAtivaLoad(false)\n            console.log(\"Erro ao realizar login: \" + error)\n            navigation.navigate(\"Erro\");            \n        })\n        \n    }\n    function ExibeLoad(){\n        return(\n            <Loading/>\n        );\n    }\n    \n    function ExibeDados(){\n        return(\n            <ImageBackground\n            source={getImage('background')}\n            imageStyle={styles.imageBackground}\n            style={styles.imageContainer}>\n            <View style={styles.container}>\n                <Image\n                    style={styles.image}\n                    source={getImage('logo-transparente')} />\n                <TextInput style={styles.inputStyle}\n                    keyboardType=\"text\"\n                    onChangeText={setUser}\n                    placeholder=\"usuário\"\n                    value={user} />\n                <TextInput style={styles.inputStyle}\n                    keyboardType=\"password\"\n                    onChangeText={setPassword}\n                    placeholder=\"senha\"\n                    secureTextEntry={true}\n                    value={password} />\n    \n                <View style={styles.conteinerButton}>\n                    <Button style={styles.button}\n                        color=\"#2F2E2E\"\n                        title=\"Entrar na minha conta\"\n                        accessibilityLabel=\"Botão que realiza o login\"\n                        onPress={realizarLogin} />\n                </View>\n            </View>\n        </ImageBackground>\n        );\n    }\n\n    function Exibir(flag){\n        if(flag){\n            return ExibeLoad();\n        }else{\n            return ExibeDados();\n        }        \n    }\n    \n    return(\n        <View style={{flex: 1}}>\n            {Exibir(ativaLoad)}\n        </View>        \n    );  \n   \n}\nconst styles = StyleSheet.create({\n    image: {\n        width: 200,\n        height: 200,\n        resizeMode: 'stretch'\n    },\n    container: {\n        flex: 1,\n        backgroundColor: 'black',\n        opacity: 0.7,\n        alignItems: 'center',\n        padding: 16\n    },\n    imageContainer: {\n        flex: 1\n    },\n    inputStyle: {\n        backgroundColor: 'white',\n        borderColor: 'gray',\n        borderRadius: 1,\n        borderWidth: 2,\n        height: 40,\n        marginBottom: 10,\n        paddingHorizontal: 5,\n        width: 300\n    },\n    imageBackground: {\n        flex: 1,\n        width: null,\n        height: null,\n        resizeMode: 'cover'\n    },\n    conteinerButton: {\n        flex: 1,\n        alignItems: 'center',\n        marginTop: 30\n    },\n});"]},"metadata":{},"sourceType":"module"}